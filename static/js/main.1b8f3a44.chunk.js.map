{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.scss","components/Button/Button.module.scss","components/ImageGallery/ImageGallery.module.scss","components/Spinner/Spinner.module.scss","services/images-api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Spinner/Spinner.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.scss","components/Modal/Modal.module.scss"],"names":["module","exports","fetchImages","searchQuery","currentPage","pageSize","fullUrl","fetch","then","response","json","data","hits","Searchbar","onSubmitt","useState","search","setSearch","className","styles","SearchForm","onSubmit","evt","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","ImageGalleryItem","id","imgName","imgLink","click","src","alt","onClick","ImageGallery","images","imageClick","map","image","previewURL","Button","window","scrollTo","top","document","documentElement","scrollHeight","behavior","buttonContainer","Spinner","spinner","color","height","width","Modal","useEffect","addEventListener","handleKeyDown","removeEventListener","code","Overlay","App","setImages","setSearchQuery","setCurrentPage","setError","imageForModal","setImageForModal","showModal","setShowModal","isLoading","setIsLoading","options","newImages","prevState","prevPage","catch","error","finally","targetImage","find","activeImage","Number","largeImageURL","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,yBAAyB,mD,mBCAzGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,gBAAkB,kC,mBCApED,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,QAAU,2B,4ICIfC,EAAc,SAAC,GAA0D,IAAD,IAAvDC,mBAAuD,MAAzC,GAAyC,MAArCC,mBAAqC,MAAvB,EAAuB,MAApBC,gBAAoB,MAAT,GAAS,EAC3EC,EAAO,UANL,2BAMK,gBALL,qCAKK,cAA0BH,EAA1B,uBAJJ,QAII,wBAHG,aAGH,iBAA4FC,EAA5F,qBAAoHC,GACjI,OAAOE,MAAMD,GACRE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,S,+BCLdC,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAExB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAWA,OACI,wBAAQC,UAAU,YAAlB,SACI,uBAAMA,UAAWC,IAAOC,WAAYC,SAPvB,SAACC,GAClBA,EAAIC,iBACJT,EAAUE,IAKN,UACI,wBAAQQ,KAAK,SAASN,UAAYC,IAAO,qBAAzC,SACI,sBAAMD,UAAWC,IAAO,2BAAxB,sBAGJ,uBACID,UAAYC,IAAO,oBACnBK,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,MAAOZ,EACPa,SAvBK,SAACP,GAClBL,EAAUK,EAAIQ,cAAcF,gB,kCCNvBG,EAAmB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,GAAIC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACrD,OACI,oBAAIjB,UAAWC,IAAOY,iBAAtB,SACI,qBAAKC,GAAIA,EAAII,IAAKF,EAASG,IAAKJ,EAASf,UAAWC,IAAO,0BAA2BmB,QAASH,OCF9FI,EAAe,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAEnC,OACI,oBAAIvB,UAAWC,IAAOoB,aAAtB,SACKC,EAAOE,KAAI,SAAAC,GAAK,OACb,cAAC,EAAD,CAAiCX,GAAIW,EAAMX,GAAIC,QAASU,EAAMC,WAAYV,QAASS,EAAMC,WAAYT,MAAOM,GAArFE,EAAMX,U,iBCNhCa,EAAS,SAAC,GAA8B,EAA5BzC,YAA6B,IAAhBiB,EAAe,EAAfA,SAKlC,OAJAyB,OAAOC,SAAS,CACZC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,WAGV,qBAAKlC,UAAWC,IAAOkC,gBAAvB,SACI,wBAAQ7B,KAAK,SAASN,UAAWC,IAAO0B,OAAQP,QAASjB,EAAzD,0B,kCCPCiC,EAAU,WACnB,OACI,qBAAKpC,UAAWC,IAAOoC,QAAvB,SACI,cAAC,IAAD,CAAQ/B,KAAK,YAAYgC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,Q,gBCF3DC,EAAQ,SAAC,GAAsB,IAApBhB,EAAmB,EAAnBA,MAAOR,EAAY,EAAZA,MAE3ByB,qBAAU,WAEN,OADAd,OAAOe,iBAAiB,UAAWC,GAC5B,WACHhB,OAAOiB,oBAAoB,UAAWD,OAI9C,IAAMA,EAAgB,SAACxC,GACF,WAAbA,EAAI0C,MACJ7B,KAIR,OACI,qBAAKjB,UAAWC,IAAO8C,QAAS3B,QAASH,EAAzC,SACI,qBAAKjB,UAAWC,IAAOwC,MAAvB,SACI,qBAAKvB,IAAKO,EAAON,IAAI,GAAGnB,UAAWC,IAAOwB,aC2D3CuB,EAxEH,WAEV,MAA4BnD,mBAAS,IAArC,mBAAOyB,EAAP,KAAe2B,EAAf,KACA,EAAsCpD,mBAAS,IAA/C,mBAAOZ,EAAP,KAAoBiE,EAApB,KACA,EAAsCrD,mBAAS,GAA/C,mBAAOX,EAAP,KAAoBiE,EAApB,KACA,EAA0BtD,mBAAS,MAAnC,mBAAcuD,GAAd,WACA,EAA0CvD,mBAAS,IAAnD,mBAAOwD,EAAP,KAAsBC,EAAtB,KACA,EAAkCzD,oBAAS,GAA3C,mBAAO0D,EAAP,KAAkBC,EAAlB,KACA,EAAkC3D,oBAAS,GAA3C,mBAAO4D,EAAP,KAAkBC,EAAlB,KAeAhB,qBAAU,WACR,GAAoB,KAAhBzD,EAAoB,CACtB,IAAM0E,EAAU,CAAE1E,cAAaC,eAC/BwE,GAAa,GAEb1E,EAAY2E,GACTrE,MAAK,SAAAsE,GACJX,GAAU,SAAAY,GAAS,4BAAQA,GAAR,YAAsBD,OACzCT,GAAe,SAAAW,GAAQ,OAAIA,EAAW,QAEvCC,OAAM,SAAAC,GAAK,OAAIZ,EAASY,MACxBC,SAAQ,kBAAMP,GAAa,SAE/B,CAACzE,IAoBJ,OACE,qBAAKe,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UAEI,cAAC,EAAD,CAAWJ,UAtBI,SAAAE,GACrBmD,EAAU,IACVC,EAAepD,GACfqD,EAAe,GACfC,EAAS,SAmBH,cAAC,EAAD,CAAc9B,OAAQA,EAAQC,WAhBjB,SAACnB,GACpB,IAAM8D,EAAc5C,EAAO6C,MAAK,SAAAC,GAAW,OAAKA,EAAYtD,KAAOuD,OAAOjE,EAAIQ,cAAcE,OAC5FwC,EAAiBY,EAAYI,eAC7Bd,GAAa,MAcNC,GAAa,cAAC,EAAD,IACbnC,EAAOiD,OAAS,GAAMhB,GAAc,cAAC,EAAD,CAAQrE,YAAaA,EAAaiB,SArD1D,WACnB,IAAMwD,EAAU,CAAE1E,cAAaC,eAC/BwE,GAAa,GAEb1E,EAAY2E,GACTrE,MAAK,SAAAsE,GACJX,GAAU,SAAAY,GAAS,4BAAQA,GAAR,YAAsBD,OACzCT,GAAe,SAAAW,GAAQ,OAAIA,EAAW,QAEvCC,OAAM,SAAAC,GAAK,OAAIZ,EAASY,MACxBC,SAAQ,kBAAMP,GAAa,SA2C4E,GACnGH,GAAa,cAAC,EAAD,CAAOvD,UAAU,QAAQyB,MAAO4B,EAAepC,MAb7C,SAACb,GACvBkD,EAAiB,IACjBE,GAAa,YClDFgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpF,MAAK,YAAkD,IAA/CqF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnD,SAASoD,eAAe,SAM1BX,K,kBCfA1F,EAAOC,QAAU,CAAC,WAAa,8BAA8B,oBAAoB,qCAAqC,0BAA0B,2CAA2C,mBAAmB,sC,kBCA9MD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,wB","file":"static/js/main.1b8f3a44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2ns8f\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__l5ibT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2NiqA\",\"buttonContainer\":\"Button_buttonContainer__2HMnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__39DnC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1dzlJ\"};","const URL = 'https://pixabay.com/api/';\r\nconst KEY = '23106414-1912ab188e9ddc39eb325727f';\r\nconst TYPE = 'photo';\r\nconst ORIENTATION = 'horizontal';\r\n\r\nexport const fetchImages = ({ searchQuery = '', currentPage = 1, pageSize = 12 }) => {\r\n    const fullUrl = `${URL}?key=${KEY}&q=${searchQuery}&image_type=${TYPE}&orientation=${ORIENTATION}&page=${currentPage}&per_page=${pageSize}`;\r\n    return fetch(fullUrl)\r\n        .then(response => response.json())\r\n        .then(data => data.hits);\r\n}\r\n\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Searchbar.module.scss';\r\nimport { useState } from 'react';\r\n\r\nexport const Searchbar = ({ onSubmitt }) => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const changeFilter = (evt) => {\r\n        setSearch(evt.currentTarget.value);\r\n    }\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        onSubmitt(search);\r\n    }\r\n\r\n    return (\r\n        <header className=\"Searchbar\">\r\n            <form className={styles.SearchForm} onSubmit={handleSubmit}>\r\n                <button type=\"submit\" className={ styles['SearchForm-button'] }>\r\n                    <span className={styles['SearchForm-button-label'] }>Search</span>\r\n                </button>\r\n\r\n                <input\r\n                    className={ styles['SearchForm-input'] }\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    value={search}\r\n                    onChange={changeFilter}\r\n                />\r\n            </form>\r\n        </header>\r\n        )\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmitt: PropTypes.func.isRequired\r\n}\r\n","import styles from './ImageGalleryItem.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ImageGalleryItem = ({ id, imgName, imgLink, click }) => {\r\n    return (\r\n        <li className={styles.ImageGalleryItem}>\r\n            <img id={id} src={imgLink} alt={imgName} className={styles['ImageGalleryItem-image']} onClick={click} />\r\n        </li>\r\n    )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    imgName: PropTypes.string.isRequired,\r\n    imgLink: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    click: PropTypes.func.isRequired\r\n}","import styles from './ImageGallery.module.scss';\r\nimport { ImageGalleryItem } from '../ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ImageGallery = ({ images, imageClick }) => {\r\n\r\n    return (\r\n        <ul className={styles.ImageGallery}>\r\n            {images.map(image => (\r\n                <ImageGalleryItem key={image.id} id={image.id} imgName={image.previewURL} imgLink={image.previewURL} click={imageClick} />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        previewURL: PropTypes.string.isRequired,\r\n        imageClick: PropTypes.func\r\n    }))\r\n}","import styles from './Button.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Button = ({ currentPage, onSubmit }) => {\r\n    window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n    });\r\n    return (\r\n        <div className={styles.buttonContainer}>\r\n            <button type='button' className={styles.Button} onClick={onSubmit}>Load more</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nButton.propTypes = {\r\n    currentPage: PropTypes.number.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\n","import styles from './Spinner.module.scss';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport const Spinner = () => {\r\n    return (\r\n        <div className={styles.spinner}>\r\n            <Loader type=\"ThreeDots\" color=\"#72757c\" height={80} width={80} />\r\n        </div>\r\n    )\r\n}","import styles from './Modal.module.scss';\r\nimport { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Modal = ({ image, click }) => {\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    });\r\n\r\n    const handleKeyDown = (evt) => {\r\n        if (evt.code === 'Escape') {\r\n            click();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.Overlay} onClick={click}>\r\n            <div className={styles.Modal}>\r\n                <img src={image} alt=\"\" className={styles.image} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nModal.propTypes = {\r\n    image: PropTypes.string.isRequired,\r\n    click: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import { fetchImages } from './services/images-api'\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { Searchbar } from './components/Searchbar';\nimport { ImageGallery } from './components/ImageGallery';\nimport { Button } from './components/Button';\nimport { Spinner } from './components/Spinner';\nimport { Modal } from './components/Modal';\n\nconst App = () => {\n\n  const [images, setImages] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [imageForModal, setImageForModal] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchImagess = () => {\n    const options = { searchQuery, currentPage };\n    setIsLoading(true);\n\n    fetchImages(options)\n      .then(newImages => {\n        setImages(prevState => [...prevState, ...newImages]);\n        setCurrentPage(prevPage => prevPage + 1);\n      })\n      .catch(error => setError(error))\n      .finally(() => setIsLoading(false));\n  };\n\n  useEffect(() => {\n    if (searchQuery !== '') {\n      const options = { searchQuery, currentPage };\n      setIsLoading(true);\n\n      fetchImages(options)\n        .then(newImages => {\n          setImages(prevState => [...prevState, ...newImages]);\n          setCurrentPage(prevPage => prevPage + 1);\n        })\n        .catch(error => setError(error))\n        .finally(() => setIsLoading(false));\n    }\n  }, [searchQuery]);\n\n  const onChangeFilter = search => {\n    setImages([]);\n    setSearchQuery(search);\n    setCurrentPage(1);\n    setError(null);\n  }\n\n  const onimageClick = (evt) => {\n    const targetImage = images.find(activeImage => (activeImage.id === Number(evt.currentTarget.id)));\n    setImageForModal(targetImage.largeImageURL);\n    setShowModal(true);\n  }\n\n  const handleBackClick = (evt) => {\n    setImageForModal(\"\");\n    setShowModal(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n          <Searchbar onSubmitt={onChangeFilter} />\n          <ImageGallery images={images} imageClick={onimageClick} />\n          {isLoading && <Spinner />}\n          {images.length > 0 ? !(showModal) && <Button currentPage={currentPage} onSubmit={fetchImagess} /> : ''}\n          {showModal && <Modal className='modal' image={imageForModal} click={handleBackClick} />}\n\n      </header>\n      </div>\n    )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Searchbar_SearchForm__10Zq-\",\"SearchForm-button\":\"Searchbar_SearchForm-button__3gqVl\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__3cBdo\",\"SearchForm-input\":\"Searchbar_SearchForm-input__1mZzm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3mWS_\",\"image\":\"Modal_image__3eKPN\"};"],"sourceRoot":""}